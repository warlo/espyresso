import pygame

pygame.init()

# Initialise screen
gameDisplay = pygame.display.set_mode((320, 240))
pygame.display.set_caption("TicTacToe")
clock = pygame.time.Clock()

# Fill background
background = pygame.Surface(gameDisplay.get_size())
background = background.convert()
background.fill((220, 220, 220))

# Blit stuff
gameDisplay.blit(background, (0, 0))
pygame.display.update()

WIDTH = 320
HEIGHT = 240

WIDTH_RATIO = 320 / 320  # 1
HEIGHT_RATIO = 190 / 40  # 3.75

samples = [
    70,
    71,
    71,
    72,
    72,
    74,
    75,
    78,
    80,
    81,
    81,
    82,
    82,
    82,
    83,
    83,
    83,
    84,
    85,
    85,
    85,
    87,
    87,
    88,
    89,
    90,
    91,
    92,
    92,
    92,
    92,
    93,
    93,
    93,
    93,
    94,
    94,
    93,
    92,
]
test = [
    (0, 127.823_888_617_488_99),
    (1, 127.693_942_354_665_35),
    (2, 127.563_996_091_841_72),
    (3, 127.304_103_566_194_4),
    (4, 127.044_211_040_547_13),
    (5, 126.914_264_777_723_49),
    (6, 126.654_372_252_076_21),
    (7, 126.264_533_463_605_28),
    (8, 126.004_640_937_958),
    (9, 125.744_748_412_310_68),
    (10, 125.354_909_623_839_73),
    (11, 125.095_017_098_192_46),
    (12, 124.705_178_309_721_55),
    (13, 124.315_339_521_250_6),
    (14, 124.055_446_995_603_33),
    (15, 123.665_608_207_132_38),
    (16, 123.275_769_418_661_43),
    (17, 122.885_930_630_190_51),
    (18, 122.496_091_841_719_58),
    (19, 122.106_253_053_248_66),
    (20, 121.846_360_527_601_39),
    (21, 121.586_468_001_954_07),
    (22, 121.196_629_213_483_12),
    (23, 120.936_736_687_835_85),
    (24, 120.416_951_636_541_27),
    (25, 120.027_112_848_070_36),
    (26, 119.897_166_585_246_72),
    (27, 119.507_327_796_775_77),
    (28, 119.117_489_008_304_82),
    (29, 118.857_596_482_657_54),
    (30, 118.597_703_957_010_24),
    (31, 118.207_865_168_539_33),
    (32, 117.947_972_642_892_01),
    (33, 117.688_080_117_244_74),
    (34, 117.428_187_591_597_46),
    (35, 117.168_295_065_950_19),
    (36, 117.038_348_803_126_51),
    (37, 116.778_456_277_479_24),
    (38, 116.648_510_014_655_6),
    (39, 116.648_510_014_655_6),
    (40, 116.518_563_751_831_93),
    (41, 116.518_563_751_831_93),
    (42, 116.388_617_489_008_3),
    (43, 116.258_671_226_184_66),
    (44, 116.258_671_226_184_66),
    (45, 116.128_724_963_361_02),
    (46, 116.128_724_963_361_02),
    (47, 116.128_724_963_361_02),
    (48, 116.128_724_963_361_02),
    (49, 116.128_724_963_361_02),
    (50, 115.738_886_174_890_07),
    (51, 115.738_886_174_890_07),
    (52, 115.478_993_649_242_75),
    (53, 115.478_993_649_242_75),
    (54, 115.349_047_386_419_12),
    (55, 115.349_047_386_419_12),
    (56, 115.219_101_123_595_48),
    (57, 115.219_101_123_595_48),
    (58, 115.089_154_860_771_84),
    (59, 115.089_154_860_771_84),
    (60, 115.089_154_860_771_84),
    (61, 115.089_154_860_771_84),
    (62, 115.089_154_860_771_84),
    (63, 115.219_101_123_595_48),
    (64, 115.219_101_123_595_48),
    (65, 115.219_101_123_595_48),
    (66, 115.219_101_123_595_48),
    (67, 115.349_047_386_419_12),
    (68, 115.349_047_386_419_12),
    (69, 115.478_993_649_242_75),
    (70, 115.478_993_649_242_75),
    (71, 115.608_939_912_066_43),
    (72, 115.738_886_174_890_07),
    (73, 115.738_886_174_890_07),
    (74, 115.868_832_437_713_7),
    (75, 115.998_778_700_537_34),
    (76, 115.998_778_700_537_34),
    (77, 116.128_724_963_361_02),
    (78, 116.258_671_226_184_66),
    (79, 116.388_617_489_008_3),
    (80, 116.388_617_489_008_3),
    (81, 116.518_563_751_831_93),
    (82, 116.648_510_014_655_6),
    (83, 116.648_510_014_655_6),
    (84, 116.778_456_277_479_24),
    (85, 116.908_402_540_302_87),
    (86, 117.038_348_803_126_51),
    (87, 117.168_295_065_950_19),
    (88, 117.298_241_328_773_83),
    (89, 117.298_241_328_773_83),
    (90, 117.428_187_591_597_46),
    (91, 117.558_133_854_421_1),
    (92, 117.688_080_117_244_74),
    (93, 117.688_080_117_244_74),
    (94, 117.818_026_380_068_37),
    (95, 117.947_972_642_892_01),
    (96, 118.077_918_905_715_65),
    (97, 118.077_918_905_715_65),
    (98, 118.207_865_168_539_33),
    (99, 118.207_865_168_539_33),
]


def generate_coordinates(temperatures):

    points = [
        (x * WIDTH_RATIO, HEIGHT - (y * HEIGHT_RATIO))
        for x, y in enumerate(temperatures)
    ]
    return points


def draw_lines(points):

    previous_point = (0, 240)
    for point in points:
        print("1,2", previous_point, point)
        pygame.draw.line(gameDisplay, (0, 0, 0), previous_point, point)
        previous_point = point


def get_coordinates(x1, y1, x2, y2):
    return (x1, 600 - y1), (x2, 600 - y2)


t1, t2 = get_coordinates(0, 10, 10, 20)
points = generate_coordinates(samples)
draw_lines(points)

running = True

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        print(event)
    pygame.display.update()
pygame.quit()
quit()
